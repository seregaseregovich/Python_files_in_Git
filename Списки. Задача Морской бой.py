''' Разбор задачи "Морской бой".

Дана площадка размером 4х4
в ней звездочкой обозначены места, занятые
кораблями противника, точкой - пустые места на поле:
***.
**..
*...
*...
Необходимо посчитать количество пустых площадок,
на которых можно было бы разместить однопалубные
корабли таким образом, чтобы они не прилегали бортами
(не соседствовали) с ранее установленными кораблями '''

# задаем размер игрового поля:
m, n = map(int, input('Введите кол-во строк и кол-во '
                      'столбцов игрового поля через '
                      'пробел: ').split())
# Для удобства поиска клеток, которые не прилегают ни к кораблям,
# ни к краю игрового поля, увеличиваем размер игрового поля:
# 1. увеличиваем количество строк с точками на 1 сверху и 1 снизу,
# 2. увеличиваем количество элементов в строке, содержащих
# точку, на 1 элемент слева и на 1 элемент справа
# Теперь поле стало выглядеть так:
# ......
# .***..
# .**...
# .*....
# .*....
# ......
mas = ['.' * (m + 2)]  # создаем массив с первой строкой с точками,
# в которой количество элементов = m+2:
# результат - ......
for i in range(m):
    # для заданного количества строк m через input
    # вводим элементы строки n, прибавляя к ним
    # спереди и сзади по точке. Добавляем строки в массив:
    mas.append('.' + input("Введите элемент строки массива: ") + '.')
    # вид первой строки: .***..
    # вид второй строки: .**... и т.д.
mas.append('.' * (m + 2))  # добавляем последнюю строку с точками
# Проверяем (выводим на печать):
print(mas)
# Результат:
# ['......', '.***..', '.**...', '.*....', '.*....', '......']
k = 0
# Для подсчета количества клеток, содержимое соседних клеток
# с которыми будет равно точке, перебираем весь массив MxN
# и применяем условие для поиска.
for i in range(1, m + 1):
    for j in range(1, n + 1):
        if mas[i - 1][j] == '.' and mas[i][j - 1] == '.' \
                and mas[i + 1][j] == '.' and mas[i][j + 1] == '.' \
                and mas[i][j] == '.':
            k += 1  # подсчитываем количество таких клеток
print(k)

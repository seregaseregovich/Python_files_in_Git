# СПОСОБ 1:
# ======================================================

s = input("Введите данные для проверки количества букв и цифр: ")
ll = 0
L = 0
d = 0
n = 0
print("Длина введенного текста -", len(s), "символов")
while len(s) > 0:
    b = s[0]
    if ("a" <= b <= "z") or ("а" <= b <= "я"):
        ll = ll + 1
    if ("А" <= b <= "Я") or ("A" <= b <= "Z"):
        L = L + 1
    if "0" <= b <= "9":
        d = d + 1
    if b == " ":
        n = n + 1
    s = s[1:]
print("В предложении больших букв -", L, ",")
print("маленьких букв -", ll, ",")
print("пробелов -", n, ",")
print("цифр -", d, ".")


# СПОСОБ 2: с использованием кодировки символов
# ======================================================

s = "Abczjhdf HG jgkfYGg jhgkdf 543 f*(^($&*#"
letters = [0] * 26  # Создаем список с нулями, соответствующий
# количеству маленьких букв в алфавите
for i in s:
    if 'a' <= i <= 'z':
        nomer = ord(i) - 97  # Если буква попадает в диапазон,
        #  то создается переменная nomer, которой присваиваем значение.
        #  Это значение - результат преобразования кода из буквы (ord()),
        #  за вычетом разницы 97 (для буквы а код 97, а индекс в нашем
        #  списке для этой буквы должен быть 0.)
        letters[nomer] += 1  # Подсчитываем количество букв
        # для каждого индекса (nomer - индекс).
for i in range(len(letters)):
    if letters[i] != 0:
        print(chr(i + 97), "=", letters[i])
letters = [0] * 26  # Создаем список с нулями, соответствующий
# количеству больших букв в алфавите
print("-----------------------------------------")
nomer = 0
for i in s:
    if 'A' <= i <= 'Z':
        nomer = ord(i) - 65
        letters[nomer] += 1
for i in range(len(letters)):
    if letters[i] != 0:
        print(chr(i + 65), "=", letters[i])


# СПОСОБ 3: с использованием словаря и преобразований
# ======================================================

def count_it(seq):
    # Создаем словарь, в котором ключи - числа из строки seq,
    # а значения - количество нахождений этого числа в строке.
    dict1 = {int(i): seq.count(i) for i in seq}
    # Преобразуем словарь в список кортежей, в каждом
    # из которых ключ - символ, значение - количество этих
    # символов в строке.
    # Сортируем список по количеству символов
    # (по индексу 1) в каждом кортеже.
    sortlist1 = sorted(list(dict1.items()), key=lambda x: x[1])
    # Сортировка по убыванию
    print(sortlist1)
    sortlist1.reverse()
    # Печать первых 3х максимальных значений
    print(sortlist1[:3])


count_it('119999911115555331111222')


# СПОСОБ 4: с применением  Counter из модуля collections.
# ======================================================

from collections import Counter

cnt = Counter('119999911115555331111222')
# Выводит словарь с результатом
# {'1': 10, '9': 5, '5': 4, '3': 2, '2': 3}
print(dict(cnt))

# Либо так:

import collections

cnt = collections.Counter('119999911115555331111222')
print(dict(cnt))
